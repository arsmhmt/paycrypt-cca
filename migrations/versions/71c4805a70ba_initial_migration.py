"""Initial migration

Revision ID: 71c4805a70ba
Revises: 
Create Date: 2025-07-23 21:52:58.115251

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '71c4805a70ba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('client_packages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('client_type', sa.Enum('COMMISSION', 'FLAT_RATE', name='clienttype'), nullable=False),
    sa.Column('monthly_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('annual_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('commission_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('setup_fee', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('supports_monthly', sa.Boolean(), nullable=True),
    sa.Column('supports_annual', sa.Boolean(), nullable=True),
    sa.Column('annual_discount_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('max_transactions_per_month', sa.Integer(), nullable=True),
    sa.Column('max_api_calls_per_month', sa.Integer(), nullable=True),
    sa.Column('max_wallets', sa.Integer(), nullable=True),
    sa.Column('max_volume_per_month', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('min_margin_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'DEPRECATED', name='packagestatus'), nullable=True),
    sa.Column('is_popular', sa.Boolean(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('symbol', sa.String(length=10), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('currency_rates',
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('btc_rate', sa.Float(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('currency')
    )
    op.create_table('features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('feature_key', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('feature_key'),
    sa.UniqueConstraint('name')
    )
    op.create_table('platforms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('platform_type', sa.Enum('BETTING', 'SAAS', 'DONATION', 'MARKETPLACE', 'FREELANCER', 'DAO', name='platformtype'), nullable=False),
    sa.Column('api_key', sa.String(length=64), nullable=False),
    sa.Column('api_secret', sa.String(length=64), nullable=False),
    sa.Column('webhook_url', sa.String(length=255), nullable=True),
    sa.Column('callback_url', sa.String(length=255), nullable=True),
    sa.Column('logo_url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key')
    )
    op.create_table('pricing_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('plan_type', sa.Enum('STANDARD', 'PREMIUM', 'ENTERPRISE', 'CUSTOM', name='plantype'), nullable=False),
    sa.Column('billing_cycle', sa.Enum('MONTHLY', 'QUARTERLY', 'BIANNUAL', 'ANNUAL', 'ONE_TIME', name='billingcycle'), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_is_default'), ['is_default'], unique=False)

    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=50), nullable=False),
    sa.Column('value', sa.JSON(), nullable=True),
    sa.Column('setting_type', sa.String(length=20), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('wallet_providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('provider_type', sa.Enum('BINANCE', 'COINBASE', 'KRAKEN', 'MANUAL', 'OTHER', name='walletprovidertype'), nullable=False),
    sa.Column('api_key', sa.Text(), nullable=True),
    sa.Column('api_secret', sa.Text(), nullable=True),
    sa.Column('api_passphrase', sa.Text(), nullable=True),
    sa.Column('sandbox_mode', sa.Boolean(), nullable=True),
    sa.Column('wallet_addresses', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('supports_deposits', sa.Boolean(), nullable=True),
    sa.Column('supports_withdrawals', sa.Boolean(), nullable=True),
    sa.Column('supports_balance_check', sa.Boolean(), nullable=True),
    sa.Column('max_requests_per_minute', sa.Integer(), nullable=True),
    sa.Column('last_health_check', sa.DateTime(), nullable=True),
    sa.Column('health_status', sa.String(length=20), nullable=True),
    sa.Column('last_error_message', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('package_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.Column('is_included', sa.Boolean(), nullable=True),
    sa.Column('limit_value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['client_packages.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('package_id', 'feature_id')
    )
    op.create_table('platform_integrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.Column('integration_type', sa.String(length=50), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('platform_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('platform_webhooks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('secret', sa.String(length=64), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('selected_package_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['selected_package_id'], ['client_packages.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('wallet_balances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('currency_code', sa.String(length=10), nullable=False),
    sa.Column('available_balance', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('locked_balance', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('total_balance', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('update_source', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['wallet_providers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider_id', 'currency_code', name='unique_provider_balance')
    )
    op.create_table('wallet_provider_currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('currency_code', sa.String(length=10), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('minimum_deposit', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('minimum_withdrawal', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('withdrawal_fee', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('wallet_address', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['wallet_providers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider_id', 'currency_code', name='unique_provider_currency')
    )
    op.create_table('wallet_provider_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('currency_code', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('fee', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('from_address', sa.String(length=255), nullable=True),
    sa.Column('to_address', sa.String(length=255), nullable=True),
    sa.Column('txid', sa.String(length=255), nullable=True),
    sa.Column('block_height', sa.Integer(), nullable=True),
    sa.Column('confirmations', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('raw_response', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['wallet_providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_trail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=20), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('old_value', sa.JSON(), nullable=True),
    sa.Column('new_value', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('platform_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('vat_number', sa.String(length=50), nullable=True),
    sa.Column('registration_number', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('logo_url', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_token', sa.String(length=100), nullable=True),
    sa.Column('verification_sent_at', sa.DateTime(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('reset_password_token', sa.String(length=100), nullable=True),
    sa.Column('reset_password_sent_at', sa.DateTime(), nullable=True),
    sa.Column('login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_at', sa.DateTime(), nullable=True),
    sa.Column('contact_person', sa.String(length=255), nullable=True),
    sa.Column('contact_email', sa.String(length=120), nullable=True),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('api_key', sa.String(length=64), nullable=True),
    sa.Column('rate_limit', sa.Integer(), nullable=True),
    sa.Column('theme_color', sa.String(length=7), nullable=True),
    sa.Column('deposit_commission_rate', sa.Float(), nullable=True),
    sa.Column('withdrawal_commission_rate', sa.Float(), nullable=True),
    sa.Column('balance', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('current_month_volume', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('current_month_transactions', sa.Integer(), nullable=True),
    sa.Column('last_usage_reset', sa.DateTime(), nullable=True),
    sa.Column('package_id', sa.Integer(), nullable=True),
    sa.Column('features_override', sa.PickleType(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['package_id'], ['client_packages.id'], ),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('notification_preference',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_type', sa.String(length=20), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pricing_plan_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'CANCELED', 'EXPIRED', 'TRIAL', 'PAUSED', name='subscriptionstatus'), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('auto_renew', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pricing_plan_id'], ['pricing_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('support_tickets',
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admin_users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('api_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('endpoint', sa.String(length=255), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('response_time', sa.Float(), nullable=False),
    sa.Column('request_size', sa.Integer(), nullable=False),
    sa.Column('response_size', sa.Integer(), nullable=False),
    sa.Column('api_key', sa.String(length=64), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('key_prefix', sa.String(length=12), nullable=False),
    sa.Column('key_hash', sa.String(length=128), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('rate_limit', sa.Integer(), nullable=True),
    sa.Column('allowed_ips', sa.JSON(), nullable=True),
    sa.Column('webhook_secret', sa.String(length=64), nullable=True),
    sa.Column('client_type', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_admin_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['created_by_admin_id'], ['admin_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('client_balances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id', 'currency', name='uix_client_currency')
    )
    op.create_table('client_commissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('deposit_commission_rate', sa.Float(), nullable=True),
    sa.Column('withdrawal_commission_rate', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id', 'currency', name='uix_commission_client_currency')
    )
    op.create_table('client_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.String(length=50), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_notification_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('channel', sa.String(length=20), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_pricing_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('plan_type', sa.Enum('COMMISSION', 'FLAT_RATE', name='pricingplan'), nullable=False),
    sa.Column('plan_name', sa.String(length=100), nullable=False),
    sa.Column('deposit_commission_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('withdrawal_commission_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('flat_rate_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('billing_cycle', sa.String(length=20), nullable=True),
    sa.Column('monthly_transaction_limit', sa.Integer(), nullable=True),
    sa.Column('monthly_volume_limit', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('next_billing_date', sa.DateTime(), nullable=True),
    sa.Column('last_payment_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.Enum('THEME', 'LANGUAGE', 'TIMEZONE', 'CURRENCY', 'NOTIFICATION_EMAIL', 'NOTIFICATION_SMS', 'NOTIFICATION_PUSH', 'API_RATE_LIMIT', 'AUTO_CONFIRM_WITHDRAWAL', 'MIN_WITHDRAWAL_AMOUNT', 'MAX_WITHDRAWAL_AMOUNT', 'WITHDRAWAL_FEE', 'WITHDRAWAL_FEE_TYPE', 'DEPOSIT_FEE', 'DEPOSIT_FEE_TYPE', name='clientsettingkey'), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('monthly_fee', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('commission_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['client_packages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_wallets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('wallet_type', sa.Enum('PLATFORM_BINANCE', 'CUSTOM_API', 'CUSTOM_MANUAL', name='wallettype'), nullable=False),
    sa.Column('wallet_name', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'PENDING_VERIFICATION', 'ERROR', name='walletstatus'), nullable=True),
    sa.Column('api_key', sa.String(length=500), nullable=True),
    sa.Column('api_secret', sa.String(length=500), nullable=True),
    sa.Column('api_endpoint', sa.String(length=255), nullable=True),
    sa.Column('webhook_url', sa.String(length=255), nullable=True),
    sa.Column('webhook_secret', sa.String(length=255), nullable=True),
    sa.Column('supported_currencies', sa.JSON(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('last_balance_check', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commission_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('period_start', sa.DateTime(), nullable=False),
    sa.Column('period_end', sa.DateTime(), nullable=False),
    sa.Column('deposit_commission', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('withdrawal_commission', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_commission', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('commission_snapshots', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_commission_snapshots_client_id'), ['client_id'], unique=False)

    op.create_table('flat_rate_subscription_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('billing_cycle', sa.Enum('MONTHLY', 'ANNUAL', name='subscriptionbillingcycle'), nullable=False),
    sa.Column('billing_amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('billing_currency', sa.String(length=5), nullable=False),
    sa.Column('billing_period_start', sa.DateTime(), nullable=False),
    sa.Column('billing_period_end', sa.DateTime(), nullable=False),
    sa.Column('crypto_amount', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('crypto_currency', sa.String(length=10), nullable=False),
    sa.Column('crypto_address', sa.String(length=255), nullable=True),
    sa.Column('exchange_rate', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('rate_timestamp', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'COMPLETED', 'REJECTED', 'FAILED', 'CANCELLED', name='paymentstatus'), nullable=True),
    sa.Column('transaction_hash', sa.String(length=255), nullable=True),
    sa.Column('confirmations', sa.Integer(), nullable=True),
    sa.Column('required_confirmations', sa.Integer(), nullable=True),
    sa.Column('is_service_active', sa.Boolean(), nullable=True),
    sa.Column('service_activated_at', sa.DateTime(), nullable=True),
    sa.Column('service_suspended_at', sa.DateTime(), nullable=True),
    sa.Column('auto_renew', sa.Boolean(), nullable=True),
    sa.Column('next_billing_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('discount_applied', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['client_packages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('flat_rate_subscription_payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_flat_rate_subscription_payments_client_id'), ['client_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_flat_rate_subscription_payments_package_id'), ['package_id'], unique=False)

    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=True),
    sa.Column('invoice_number', sa.String(length=20), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_invoices_platform_id'), ['platform_id'], unique=False)

    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('package_activation_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('setup_fee_amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('setup_fee_currency', sa.String(length=5), nullable=False),
    sa.Column('crypto_amount', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('crypto_currency', sa.String(length=10), nullable=False),
    sa.Column('crypto_address', sa.String(length=255), nullable=True),
    sa.Column('exchange_rate', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('rate_timestamp', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'COMPLETED', 'REJECTED', 'FAILED', 'CANCELLED', name='paymentstatus'), nullable=True),
    sa.Column('transaction_hash', sa.String(length=255), nullable=True),
    sa.Column('confirmations', sa.Integer(), nullable=True),
    sa.Column('required_confirmations', sa.Integer(), nullable=True),
    sa.Column('is_activated', sa.Boolean(), nullable=True),
    sa.Column('activated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['client_packages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('package_activation_payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_package_activation_payments_client_id'), ['client_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_package_activation_payments_package_id'), ['package_id'], unique=False)

    op.create_table('recurring_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('frequency', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('next_payment_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('payment_provider', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('withdrawal_methods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('method_type', sa.Enum('BANK', 'CRYPTO', 'PAYPAL', 'WISE', 'PAYONEER', 'SKRILL', 'NETTELLER', 'OTHER', name='withdrawalmethodtype'), nullable=False),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('account_holder_name', sa.String(length=100), nullable=True),
    sa.Column('account_number', sa.String(length=50), nullable=True),
    sa.Column('iban', sa.String(length=50), nullable=True),
    sa.Column('swift_code', sa.String(length=50), nullable=True),
    sa.Column('crypto_currency', sa.String(length=10), nullable=True),
    sa.Column('wallet_address', sa.String(length=100), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id', 'name', name='uq_client_method_name')
    )
    op.create_table('withdrawal_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('crypto_address', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', name='withdrawalstatus'), nullable=True),
    sa.Column('withdrawal_type', sa.Enum('USER_REQUEST', 'CLIENT_BALANCE', name='withdrawaltype'), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('rejected_by', sa.Integer(), nullable=True),
    sa.Column('rejected_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('fee', sa.Float(), nullable=True),
    sa.Column('net_amount', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_wallet_address', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['admin_users.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['rejected_by'], ['admin_users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('api_key_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_key_id', sa.Integer(), nullable=False),
    sa.Column('permission', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['client_api_keys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('api_key_usage_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_key_id', sa.Integer(), nullable=False),
    sa.Column('endpoint', sa.String(length=255), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('requests_in_window', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['client_api_keys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('platform_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('fiat_amount', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('fiat_currency', sa.String(length=5), nullable=True),
    sa.Column('crypto_amount', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('crypto_currency', sa.String(length=5), nullable=True),
    sa.Column('exchange_rate', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('rate_expiry', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'COMPLETED', 'REJECTED', 'FAILED', 'CANCELLED', name='paymentstatus'), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('transaction_id', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('recurring_payment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ),
    sa.ForeignKeyConstraint(['recurring_payment_id'], ['recurring_payments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payments_client_id'), ['client_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_platform_id'), ['platform_id'], unique=False)

    op.create_table('wallet_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('wallet_id', sa.Integer(), nullable=False),
    sa.Column('transaction_hash', sa.String(length=255), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('amount', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('fee', sa.Numeric(precision=18, scale=8), nullable=True),
    sa.Column('from_address', sa.String(length=255), nullable=True),
    sa.Column('to_address', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('confirmations', sa.Integer(), nullable=True),
    sa.Column('block_number', sa.Integer(), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['wallet_id'], ['client_wallets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('withdrawals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('transaction_hash', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', name='withdrawalstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['withdrawal_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('path', sa.String(length=255), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_documents_payment_id'), ['payment_id'], unique=False)

    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('btc_value', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'COMPLETED', 'REJECTED', 'FAILED', 'CANCELLED', name='paymentstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('tx_hash', sa.String(length=100), nullable=True),
    sa.Column('block_number', sa.Integer(), nullable=True),
    sa.Column('confirmation_count', sa.Integer(), nullable=True),
    sa.Column('fee', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_documents_payment_id'))

    op.drop_table('documents')
    op.drop_table('withdrawals')
    op.drop_table('wallet_transactions')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payments_platform_id'))
        batch_op.drop_index(batch_op.f('ix_payments_client_id'))

    op.drop_table('payments')
    op.drop_table('api_key_usage_logs')
    op.drop_table('api_key_permissions')
    op.drop_table('withdrawal_requests')
    op.drop_table('withdrawal_methods')
    op.drop_table('recurring_payments')
    with op.batch_alter_table('package_activation_payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_package_activation_payments_package_id'))
        batch_op.drop_index(batch_op.f('ix_package_activation_payments_client_id'))

    op.drop_table('package_activation_payments')
    op.drop_table('notifications')
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_invoices_platform_id'))

    op.drop_table('invoices')
    with op.batch_alter_table('flat_rate_subscription_payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_flat_rate_subscription_payments_package_id'))
        batch_op.drop_index(batch_op.f('ix_flat_rate_subscription_payments_client_id'))

    op.drop_table('flat_rate_subscription_payments')
    with op.batch_alter_table('commission_snapshots', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_commission_snapshots_client_id'))

    op.drop_table('commission_snapshots')
    op.drop_table('client_wallets')
    op.drop_table('client_subscriptions')
    op.drop_table('client_settings')
    op.drop_table('client_pricing_plans')
    op.drop_table('client_notification_preferences')
    op.drop_table('client_documents')
    op.drop_table('client_commissions')
    op.drop_table('client_balances')
    op.drop_table('client_api_keys')
    op.drop_table('api_usage')
    op.drop_table('support_tickets')
    op.drop_table('subscriptions')
    op.drop_table('notification_preference')
    op.drop_table('clients')
    op.drop_table('audit_trail')
    op.drop_table('wallet_provider_transactions')
    op.drop_table('wallet_provider_currencies')
    op.drop_table('wallet_balances')
    op.drop_table('users')
    op.drop_table('platform_webhooks')
    op.drop_table('platform_settings')
    op.drop_table('platform_integrations')
    op.drop_table('package_features')
    op.drop_table('wallet_providers')
    op.drop_table('settings')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_is_default'))

    op.drop_table('roles')
    op.drop_table('report')
    op.drop_table('pricing_plans')
    op.drop_table('platforms')
    op.drop_table('features')
    op.drop_table('currency_rates')
    op.drop_table('currencies')
    op.drop_table('client_packages')
    op.drop_table('admin_users')
    # ### end Alembic commands ###
